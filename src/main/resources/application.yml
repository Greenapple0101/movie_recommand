server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: moviehub-api
  
  datasource:
    url: jdbc:postgresql://localhost:5432/moviehub
    username: moviehub
    password: moviehub123
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  redis:
    host: localhost
    port: 6379
    password: 
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

  security:
    user:
      name: admin
      password: admin123

# External API Configuration
external:
  tmdb:
    api-key: ${TMDB_API_KEY:your_tmdb_api_key_here}
    base-url: https://api.themoviedb.org/3
    image-base-url: https://image.tmdb.org/t/p/w500

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:moviehub-secret-key-for-jwt-token-generation-2024}
  expiration: 86400000 # 24 hours

# Cache Configuration
cache:
  default-ttl: 3600 # 1 hour
  movie-ttl: 7200 # 2 hours
  trending-ttl: 1800 # 30 minutes

# Logging
logging:
  level:
    com.moviehub: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# OpenAPI/Swagger
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
